# ===== DISCORD BOT SETTINGS =====
DISCORD_TOKEN=your_discord_bot_token_here

PROMPT_FILE=prompts/prompt-example.txt  # Path to system prompt

CHANGE_NICKNAME=False                 # Should the bot auto-update its nickname?
# Backend for text chat: 'openai' (OpenRouter/OpenAI) or 'ollama' (local Ollama)
TEXT_BACKEND=openai

# ===== OPENAI / OPENROUTER SETTINGS =====
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_API_BASE=https://openrouter.ai/api/v1
OPENAI_TEXT_MODEL=deepseek/deepseek-chat-v3-0324:free

VL_MODEL=moonshotai/kimi-vl-a3b-thinking:free

# =============================================================================
# FALLBACK MODEL CONFIGURATION
# =============================================================================

# VISION MODEL FALLBACK LADDER
# Models are tried in order - if first fails, try second, then third, etc.
VISION_FALLBACK_MODELS=moonshotai/kimi-vl-a3b-thinking:free,mistralai/mistral-small-3.2-24b-instruct:free,mistralai/mistral-small-3.2-24b-instruct:free

# VISION MODEL TIMEOUTS (seconds for each model above)
VISION_FALLBACK_TIMEOUTS=12.0,15.0,18.0

# TEXT MODEL FALLBACK LADDER
TEXT_FALLBACK_MODELS=deepseek/deepseek-r1-0528:free,deepseek/deepseek-chat-v3-0324:free,z-ai/glm-4.5-air:free

# TEXT MODEL TIMEOUTS (seconds for each model above)
TEXT_FALLBACK_TIMEOUTS=20.0,25.0,30.0

# MULTIMODAL PROCESSING CONFIGURATION
MULTIMODAL_PER_ITEM_BUDGET=45.0

# ===== OLLAMA SETTINGS (uncomment if using Ollama as TEXT_BACKEND) =====
# OLLAMA_BASE_URL=http://localhost:11434
# TEXT_MODEL=qwen3-235b-a22b      # Or any Ollama model name (see `ollama list`)

# ===== TTS SETTINGS =====
TTS_ENGINE=kokoro-onnx
TTS_VOICE=am_michael
TTS_MODEL_PATH=tts/onnx/kokoro-v1.0.onnx
TTS_VOICES_PATH=tts/voices/voices-v1.0.bin
TTS_LANGUAGE=en

# ===== ADMIN ALERT SYSTEM =====
ALERT_ENABLE=false                           # Enable/disable the admin DM alert system
ALERT_ADMIN_USER_IDS=your_discord_user_id_here      # Comma-separated Discord user IDs authorized to use !alert
ALERT_SESSION_TIMEOUT_S=1800                 # Alert session timeout in seconds (30 minutes)
TTS_MODEL_FILE=tts/onnx/kokoro-v1.0.onnx

# ===== RAG SYSTEM SETTINGS =====
ENABLE_RAG=true                        # Enable/disable RAG system
RAG_DB_PATH=./chroma_db               # ChromaDB storage path
RAG_KB_PATH=kb                        # Knowledge base directory

# RAG Performance & Loading
# Set RAG_EAGER_VECTOR_LOAD=false to enable lazy loading (non-blocking, immediate replies preserved)
RAG_EAGER_VECTOR_LOAD=true            # Load vector index at startup (true) or lazily on first search (false)
RAG_BACKGROUND_INDEXING=true          # Process new documents asynchronously (true) or synchronously (false)

# RAG Embedding Model
RAG_EMBEDDING_MODEL_TYPE=sentence-transformers
RAG_EMBEDDING_MODEL_NAME=sentence-transformers/all-MiniLM-L6-v2

# RAG Search Parameters
RAG_VECTOR_CONFIDENCE_THRESHOLD=0.7   # Minimum confidence for vector results
RAG_MAX_VECTOR_RESULTS=5              # Maximum vector search results
RAG_VECTOR_WEIGHT=0.7                 # Weight for vector search (0.0-1.0)
RAG_MAX_KEYWORD_RESULTS=3             # Maximum keyword search results
RAG_KEYWORD_WEIGHT=0.3                # Weight for keyword search (0.0-1.0)

# RAG Fallback Behavior
RAG_FALLBACK_ON_FAILURE=true          # Fallback to keyword search on vector failure
RAG_FALLBACK_ON_LOW_CONFIDENCE=true   # Fallback to keyword search on low confidence
RAG_MIN_RESULTS_THRESHOLD=1           # Minimum results before fallback

# RAG Result Processing
RAG_COMBINE_RESULTS=true              # Combine vector and keyword results
RAG_MAX_COMBINED_RESULTS=5            # Maximum combined results
RAG_DEDUPLICATION_THRESHOLD=0.9       # Similarity threshold for deduplication

# RAG Chunking
RAG_CHUNK_SIZE=512                    # Text chunk size in tokens
RAG_CHUNK_OVERLAP=50                  # Overlap between chunks
RAG_MIN_CHUNK_SIZE=100                # Minimum chunk size

# RAG Access Control
RAG_ENFORCE_USER_SCOPING=true         # Enforce user-based access control
RAG_ENFORCE_GUILD_SCOPING=true        # Enforce guild-based access control

# RAG Logging
RAG_LOG_RETRIEVAL_PATHS=true          # Log retrieval decision paths
RAG_LOG_CONFIDENCE_SCORES=true        # Log confidence scores

# RAG Background Processing
RAG_INDEXING_QUEUE_SIZE=256           # Maximum items in indexing queue (backpressure)
RAG_INDEXING_WORKERS=2                # Number of background indexing workers
RAG_INDEXING_BATCH_SIZE=32            # Documents to process per batch/flush
RAG_LAZY_LOAD_TIMEOUT=0.0             # Seconds to wait in search path for lazy load (0.0 = never block)

# ===== ONLINE SEARCH (DDG default, pluggable custom) =====
SEARCH_PROVIDER=ddg                   # ddg | custom
SEARCH_MAX_RESULTS=5
SEARCH_SAFE=moderate                  # off|moderate|strict
SEARCH_LOCALE=
DDG_API_ENDPOINT=https://duckduckgo.com/html/
DDG_TIMEOUT_MS=5000
CUSTOM_SEARCH_API_ENDPOINT=
CUSTOM_SEARCH_API_KEY=
CUSTOM_SEARCH_HEADERS=
CUSTOM_SEARCH_TIMEOUT_MS=8000
CUSTOM_SEARCH_RESULT_PATHS=
SEARCH_POOL_MAX_CONNECTIONS=10
SEARCH_BREAKER_FAILURE_WINDOW=5
SEARCH_BREAKER_OPEN_MS=15000
SEARCH_BREAKER_HALFOPEN_PROB=0.25

# ===== STREAMING STATUS CARDS =====
STREAMING_ENABLE=false
STREAMING_EMBED_STYLE=compact         # compact | detailed
STREAMING_TICK_MS=750
STREAMING_MAX_STEPS=8

# Per-domain streaming eligibility toggles
# Text-only flows should not show streaming cards by default (single final message only)
STREAMING_ENABLE_TEXT=false           # true enables cards for pure text flows (default false)
STREAMING_ENABLE_SEARCH=false         # true enables cards for online search flows
STREAMING_ENABLE_RAG=false            # true enables cards for RAG retrieval/ingest flows
STREAMING_ENABLE_MEDIA=true           # true keeps cards for heavy media (images/video/audio/PDF/screenshots)

# ===== STT ORCHESTRATION =====
# Enable orchestrated STT pipeline (falls back to legacy STT when false)
STT_ENABLE=true

# Orchestration mode:
#   single | cascade_primary_then_fallbacks | parallel_first_acceptable | parallel_best_of | hybrid_draft_then_finalize
STT_MODE=single

# Comma-separated list of active providers. Currently supported: local_whisper
STT_ACTIVE_PROVIDERS=local_whisper

# Acceptance threshold for providers that emit confidence (0.0-1.0)
STT_CONFIDENCE_MIN=0.0

# Cache settings (seconds)
STT_CACHE_TTL=600

# Local provider concurrency limit
STT_LOCAL_CONCURRENCY=2

# ===== X / TWITTER API (API-first with strict fallback) =====
# Enable X API integration (requires bearer token)
X_API_ENABLED=false
X_API_BEARER_TOKEN=

# Fallback behavior
X_API_REQUIRE_API_FOR_TWITTER=false     # If true, do not scrape/fallback when API fails (401/403/404/410)
X_API_ALLOW_FALLBACK_ON_5XX=true        # Allow generic extraction fallback on 5xx/429

# Fast probe: attempt STT on X URLs before API/syndication (helps video tweets route to STT)
X_TWITTER_STT_PROBE_FIRST=true

# Photo media routing to Vision-Language analysis (disabled by default)
X_API_ROUTE_PHOTOS_TO_VL=false

# Networking & resilience
X_API_TIMEOUT_MS=8000
X_API_RETRY_MAX_ATTEMPTS=5
X_API_BREAKER_FAILURE_WINDOW=5
X_API_BREAKER_OPEN_MS=15000
X_API_BREAKER_HALFOPEN_PROB=0.25

# Hydration fields (comma-separated)
X_TWEET_FIELDS=id,text,created_at,author_id,public_metrics,possibly_sensitive,lang,attachments,entities,referenced_tweets,conversation_id
X_EXPANSIONS=author_id,attachments.media_keys,referenced_tweets.id,referenced_tweets.id.author_id
X_MEDIA_FIELDS=media_key,type,url,preview_image_url,variants,width,height,alt_text,public_metrics
X_USER_FIELDS=id,name,username,profile_image_url,verified,protected
X_POLL_FIELDS=

# ===== VISION GENERATION SYSTEM =====
# Enable Vision generation features (text-to-image, image editing, video generation)
VISION_ENABLED=false
# API key for Vision providers (Together.ai, Novita.ai)
VISION_API_KEY=your_vision_api_key_here
# Comma-separated list of allowed providers: together,novita
VISION_ALLOWED_PROVIDERS=together,novita
# Default provider to use: together or novita
VISION_DEFAULT_PROVIDER=together

# Vision System Paths
# Path to Vision safety policy configuration file
VISION_POLICY_PATH=configs/vision_policy.json
# Base directory for Vision system data storage
VISION_DATA_DIR=vision_data
# Directory for generated artifacts (images, videos)
VISION_ARTIFACTS_DIR=vision_data/artifacts
# Directory for job state persistence
VISION_JOBS_DIR=vision_data/jobs
# Path to budget and cost ledger file
VISION_LEDGER_PATH=vision_data/ledger.jsonl

# Vision System Performance & Limits
# Maximum concurrent Vision jobs across all users
VISION_MAX_CONCURRENT_JOBS=5
# Maximum concurrent jobs per user
VISION_MAX_USER_CONCURRENT_JOBS=2
# Job timeout in seconds (5 minutes default)
VISION_JOB_TIMEOUT_SECONDS=300
# Artifact cache TTL in days
VISION_ARTIFACT_TTL_DAYS=7
# Maximum size per artifact in MB
VISION_MAX_ARTIFACT_SIZE_MB=50
# Maximum total artifacts storage in GB
VISION_MAX_TOTAL_ARTIFACTS_GB=5

# Vision System Providers & Retry
# Log level for Vision system: DEBUG, INFO, WARNING, ERROR
VISION_LOG_LEVEL=INFO
# Enable detailed audit logging for all Vision operations
VISION_AUDIT_ENABLED=true
# Provider API timeout in milliseconds
VISION_PROVIDER_TIMEOUT_MS=60000
# Maximum provider retry attempts
VISION_PROVIDER_MAX_RETRIES=3
# Base delay between retries in milliseconds
VISION_PROVIDER_RETRY_DELAY_MS=2000

# Vision System Discord Integration
# Progress update interval for Discord messages in seconds
VISION_PROGRESS_UPDATE_INTERVAL_S=10
# Use ephemeral responses for slash commands (true/false)
VISION_EPHEMERAL_RESPONSES=false
# Enable dry run mode (no actual API calls, testing only)
VISION_DRY_RUN_MODE=false
